{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/vickibealman/counter/src/index.js\";\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport Counter from \"./Counter\";\nimport \"./index.css\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nvar initialState = {\n  count: 0\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('reducer', state, action);\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        count: 0\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar store = createStore(reducer, apply);\nstore.dispatch({\n  type: \"INCREMENT\"\n});\nstore.dispatch({\n  type: \"INCREMENT\"\n});\nstore.dispatch({\n  type: \"DECREMENT\"\n});\nstore.dispatch({\n  type: \"RESET\"\n});\n\nvar App = function App() {\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Counter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }));\n};\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 8\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/vickibealman/counter/src/index.js"],"names":["React","render","Counter","createStore","applyMiddleware","Provider","thunk","initialState","count","reducer","state","action","console","log","type","store","apply","dispatch","App","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,aAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB,EAA8BC,MAA9B;;AAEA,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,WAAL;AACE,aAAO;AACLN,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADhB,OAAP;;AAGF,SAAK,WAAL;AACE,aAAO;AACLA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADhB,OAAP;;AAGF,SAAK,OAAL;AACE,aAAO;AACLA,QAAAA,KAAK,EAAE;AADF,OAAP;;AAGF;AACE,aAAOE,KAAP;AAdJ;AAgBD;;AACD,IAAMK,KAAK,GAAGZ,WAAW,CAACM,OAAD,EACvBO,KADuB,CAAzB;AAEAD,KAAK,CAACE,QAAN,CAAe;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAAf;AACAC,KAAK,CAACE,QAAN,CAAe;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAAf;AACAC,KAAK,CAACE,QAAN,CAAe;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAAf;AACAC,KAAK,CAACE,QAAN,CAAe;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAAf;;AAEA,IAAMI,GAAG,GAAG,SAANA,GAAM;AAAA,sBACV,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADU;AAAA,CAAZ;;AAMAd,MAAM,eAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport Counter from \"./Counter\";\nimport \"./index.css\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = initialState, action) {\n  console.log('reducer', state, action);\n\n  switch(action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        count: state.count - 1\n      };\n    case 'RESET':\n      return {\n        count: 0\n      };\n    default:\n      return state;\n  }\n}\nconst store = createStore(reducer,\n  apply);\nstore.dispatch({ type: \"INCREMENT\" });\nstore.dispatch({ type: \"INCREMENT\" });\nstore.dispatch({ type: \"DECREMENT\" });\nstore.dispatch({ type: \"RESET\" });\n\nconst App = () => (\n  <Provider store={store}>\n    <Counter />\n    </Provider>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}